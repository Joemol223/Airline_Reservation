[{"F:\\ReactJS\\case-study\\src\\App.js":"1","F:\\ReactJS\\case-study\\src\\Flight.js":"2","F:\\ReactJS\\case-study\\src\\index.js":"3","F:\\ReactJS\\case-study\\src\\Home.js":"4","F:\\ReactJS\\case-study\\src\\Contact.js":"5","F:\\ReactJS\\case-study\\src\\Table.js":"6","F:\\ReactJS\\case-study\\src\\Payment.js":"7","F:\\ReactJS\\case-study\\src\\Register.js":"8","F:\\ReactJS\\case-study\\src\\reportWebVitals.js":"9","F:\\ReactJS\\case-study\\src\\Booking.js":"10","F:\\ReactJS\\case-study\\src\\Info.js":"11","F:\\ReactJS\\case-study\\src\\Succ.js":"12","F:\\ReactJS\\case-study\\src\\Table1.js":"13","F:\\ReactJS\\case-study\\src\\Cancel.js":"14","F:\\ReactJS\\case-study\\src\\Login.js":"15"},{"size":1295,"mtime":1611638216983,"results":"16","hashOfConfig":"17"},{"size":6435,"mtime":1611980639719,"results":"18","hashOfConfig":"17"},{"size":500,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":2801,"mtime":1606973918438,"results":"20","hashOfConfig":"17"},{"size":5752,"mtime":1612107172680,"results":"21","hashOfConfig":"17"},{"size":3907,"mtime":1611755585221,"results":"22","hashOfConfig":"17"},{"size":6380,"mtime":1611726547364,"results":"23","hashOfConfig":"17"},{"size":11902,"mtime":1612107205912,"results":"24","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"17"},{"size":8924,"mtime":1612107069227,"results":"26","hashOfConfig":"17"},{"size":7841,"mtime":1611765334509,"results":"27","hashOfConfig":"17"},{"size":2158,"mtime":1606974074326,"results":"28","hashOfConfig":"17"},{"size":3086,"mtime":1611821136009,"results":"29","hashOfConfig":"17"},{"size":8775,"mtime":1612106558861,"results":"30","hashOfConfig":"17"},{"size":5081,"mtime":1611926148635,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1t28kc2",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"39"},"F:\\ReactJS\\case-study\\src\\App.js",[],["70","71"],"F:\\ReactJS\\case-study\\src\\Flight.js",[],"F:\\ReactJS\\case-study\\src\\index.js",[],["72","73"],"F:\\ReactJS\\case-study\\src\\Home.js",[],["74","75"],"F:\\ReactJS\\case-study\\src\\Contact.js",["76","77"],"F:\\ReactJS\\case-study\\src\\Table.js",[],["78","79"],"F:\\ReactJS\\case-study\\src\\Payment.js",[],"F:\\ReactJS\\case-study\\src\\Register.js",["80","81"],"import React, { Component } from \"react\";   \r\nimport{Link} from 'react-router-dom'; \r\nimport axios from 'axios'\r\n \r\nimport './Register.css'\r\nclass Register extends Component {    \r\n    constructor(props) {    \r\n        super(props);    \r\n        this.state = {    \r\n            Cname: '',    \r\n            Email: '',    \r\n            DOB: '',    \r\n            Gender: 'select',    \r\n            Phone: '',    \r\n            Address: '', \r\n            Password: '',\r\n            confirm: '', \r\n            formErrors: {}    \r\n        };    \r\n    \r\n        this.initialState = this.state;    \r\n    }    \r\n    \r\n    handleFormValidation() {    \r\n        const { Cname, Email, DOB, Gender, Phone, Address, Password , confirm} = this.state;    \r\n        let formErrors = {};    \r\n        let formIsValid = true;    \r\n    \r\n        //Full name     \r\n        if (!Cname) {    \r\n            formIsValid = false;    \r\n            formErrors[\"fNameErr\"] = \"*Name required\";    \r\n        }    \r\n    \r\n        //Email    \r\n        if (!Email) {    \r\n            formIsValid = false;    \r\n            formErrors[\"emailIdErr\"] = \"*Email ID required\";    \r\n        }    \r\n        else if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(Email))) {    \r\n    \r\n            formIsValid = false;    \r\n            formErrors[\"emailIdErr\"] = \"*Invalid Email ID\";    \r\n        }    \r\n    \r\n        //DOB    \r\n        if (!DOB) {    \r\n            formIsValid = false;    \r\n            formErrors[\"dobErr\"] = \"*Date of birth required\";    \r\n        }    \r\n        else {    \r\n            var pattern = /^([0-9]{4}\\/(0[1-9]|1[0-2])\\/(0[1-9]|1[0-9]|2[0-9]|3[0-1]))$/;    \r\n            if (!pattern.test(DOB)) {    \r\n                formIsValid = false;    \r\n                formErrors[\"dobErr\"] = \"*Date of Birth format YYYY/MM/DD\";    \r\n            }    \r\n        }    \r\n    \r\n        //Gender    \r\n        if (Gender === '' || Gender === \"select\") {    \r\n            formIsValid = false;    \r\n            formErrors[\"genderErr\"] = \"*Select Gender\";    \r\n        }    \r\n    \r\n        //Phone number    \r\n        if (!Phone) {    \r\n            formIsValid = false;    \r\n            formErrors[\"phoneNumberErr\"] = \"*Phone Number required\";    \r\n        }    \r\n        else {    \r\n            var mobPattern = /^(?:(?:\\\\+|0{0,2})91(\\s*[\\\\-]\\s*)?|[0]?)?[789]\\d{9}$/;    \r\n            if (!mobPattern.test(Phone)) {    \r\n                formIsValid = false;    \r\n                formErrors[\"phoneNumberErr\"] = \"*Invalid Phone Number\";    \r\n            }    \r\n        }  \r\n        //Address\r\n        if (!Address) {    \r\n          formIsValid = false;    \r\n          formErrors[\"addressErr\"] = \"*Address required\";    \r\n      }   \r\n\r\n        //Password\r\n        if (!Password) {\r\n            formIsValid = false;  \r\n            formErrors[\"passwordErr\"]= '*Password required';\r\n          } else {\r\n            var passPattern =  /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,15}$/;\r\n            if (!passPattern.test(Password)) {\r\n                formIsValid = false;  \r\n            formErrors[\"passwordErr\"] = '*Password need to be between 6 to 15 characters  which contain at least one numeric digit and a special character';\r\n          }\r\n          }\r\n         \r\n        //Confirm Password\r\n        if (!confirm) {\r\n            formIsValid = false;  \r\n            formErrors[\"confirmErr\"]= '*Password required';\r\n          } else if (confirm !== Password) {\r\n                formIsValid = false;  \r\n            formErrors[\"confirmErr\"] = '*Passwords do not match';\r\n          }\r\n          \r\n        this.setState({ formErrors: formErrors });    \r\n        return formIsValid;    \r\n    }    \r\n    \r\n    handleChange = (e) => {    \r\n        const { name, value } = e.target;    \r\n        this.setState({ [name]: value });    \r\n    }    \r\n    \r\n    handleSubmit = (e) => {    \r\n        e.preventDefault();    \r\n        \r\n        if (this.handleFormValidation()) {\r\n            console.log(this.state);\r\n\r\n        axios.post('https://localhost:44340/api/Customer', this.state)\r\n            .then(response => {\r\n                console.log(response)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n            \r\n            alert('You have been successfully registered.')    \r\n            window.location.href=\"/Login\";\r\n            //this.setState(this.initialState)    \r\n        }    \r\n    }    \r\n    \r\n    render() {    \r\n    \r\n        const { fNameErr, emailIdErr, dobErr, genderErr, phoneNumberErr, addressErr, passwordErr, confirmErr } = this.state.formErrors;    \r\n    \r\n        return (    \r\n            <div>\r\n          <nav class=\"navbar navbar-expand-lg navbar-light \">\r\n         <Link className=\"navbar-brand\" to=\"/\">\r\n      <img className=\"logo1\"src=\"logo1.png\" alt=\"logo\" />\r\n   </Link>\r\n\r\n   <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n   <ul class=\"navbar-nav\" id=\"qqt1\">\r\n   <li className=\"nav-item\"  >\r\n     <Link className=\"ppl1\" to=\"/Login\" style={{float:\"right\"}}>Login</Link>\r\n   </li>\r\n  \r\n </ul>\r\n\r\n</div>\r\n</nav>\r\n<h1>Registration Form</h1> \r\n            <p>New user then please register first to login</p>\r\n            <img src=\"register.png\" alt=\"register\" className=\"regimg\" style={{float:\"left\"}}/>\r\n            \r\n                <div>    \r\n                    <form onSubmit={this.handleSubmit}>    \r\n                        <div className=\"form-group\">    \r\n                            <label htmlFor=\"fName\">Full Name</label>    \r\n                            <input type=\"text\" name=\"Cname\"    \r\n                                value={this.state.Cname}   id=\"form-control\"   \r\n                                onChange={this.handleChange}    \r\n                                placeholder=\"Your full name\"    \r\n                                className={fNameErr ? ' showError' : ''} />    \r\n                            {fNameErr &&    \r\n                                <div style={{ color: \"red\", paddingBottom: 10 }}>{fNameErr}</div>    \r\n                            }    \r\n    \r\n                        </div>    \r\n                        <div  className=\"form-group\">    \r\n                            <label htmlFor=\"emailId\">Email ID</label>    \r\n                            <input type=\"text\" name=\"Email\"    \r\n                                value={this.state.Email} id=\"form-control\"  \r\n                                onChange={this.handleChange}    \r\n                                placeholder=\"Email\"    \r\n                                className={emailIdErr ? ' showError' : ''} />    \r\n                            {emailIdErr &&    \r\n                                <div style={{ color: \"red\", paddingBottom: 10 }}>{emailIdErr}</div>    \r\n                            }    \r\n    \r\n                        </div>    \r\n                        <div  className=\"form-group\">    \r\n                            <label htmlFor=\"text\">Birth Date</label>    \r\n                            <input type=\"text\" name=\"DOB\"    \r\n                                value={this.state.DOB}    id=\"form-control\"  \r\n                                onChange={this.handleChange}    \r\n                                placeholder=\"YYYY/MM/DD\"    \r\n                                className={dobErr ? ' showError' : ''} />    \r\n                            {dobErr &&    \r\n                                <div style={{ color: \"red\", paddingBottom: 10 }}>{dobErr}</div>    \r\n                            }    \r\n                        </div>    \r\n                        <div  className=\"form-group\">    \r\n                            <label htmlFor=\"gender\">Gender</label>    \r\n                            <select name=\"Gender\" onChange={this.handleChange}   id=\"form-control\"   \r\n                                className={genderErr ? ' showError' : ''}   \r\n                                value={this.state.Gender} >    \r\n                                <option value=\"select\">--Select--</option>    \r\n                                <option value=\"male\">Male</option>    \r\n                                <option value=\"female\">Female</option>    \r\n                                <option value=\"female\">Other</option>    \r\n                            </select>    \r\n                            {genderErr &&    \r\n                                <div style={{ color: \"red\", paddingBottom: 10 }}>{genderErr}</div>    \r\n                            }    \r\n                        </div>    \r\n                        <div  className=\"form-group\">    \r\n                            <label htmlFor=\"phoneNumber\">Phone Number</label>    \r\n                            <input type=\"text\" name=\"Phone\"    \r\n                                onChange={this.handleChange}    id=\"form-control\"  \r\n                                value={this.state.Phone}    \r\n                                placeholder=\"Your phone number..\"    \r\n                                className={phoneNumberErr ? ' showError' : ''} />    \r\n                            {phoneNumberErr &&    \r\n                                <div style={{ color: \"red\", paddingBottom: 10 }}>{phoneNumberErr}</div>    \r\n                            }    \r\n                        </div> \r\n                        <div  className=\"form-group\">    \r\n                            <label htmlFor=\"address\">Address</label>    \r\n                            <textarea type=\"text\" name=\"Address\" \r\n                                value={this.state.Address}  id=\"form-control1\"    \r\n                                onChange={this.handleChange}    \r\n                                placeholder=\"Your address\"  \r\n                                className={addressErr ? ' showError' : ''} />    \r\n                            {addressErr &&    \r\n                                <div style={{ color: \"red\", paddingBottom: 10 }}>{addressErr}</div>    \r\n                            }   \r\n                            </div>\r\n                               <div  className=\"form-group\">    \r\n                            <label htmlFor=\"password\">Password</label>    \r\n                            <input type=\"password\" name=\"Password\"    \r\n                                onChange={this.handleChange}    id=\"form-control\"  \r\n                                value={this.state.Password}    \r\n                                placeholder=\"Password\"    \r\n                                className={passwordErr ? ' showError' : ''} />    \r\n                            {passwordErr &&    \r\n                                <div style={{ color: \"red\", paddingBottom: 10 }}>{passwordErr}</div>    \r\n                            }    \r\n                        </div>  \r\n                        <div  className=\"form-group\">    \r\n                            <label htmlFor=\"confirm\"> Confirm Password</label>    \r\n                            <input type=\"password\" name=\"confirm\"    \r\n                                onChange={this.handleChange}    id=\"form-control\"  \r\n                                value={this.state.confirm}    \r\n                                placeholder=\"Confirm Password\"    \r\n                                className={confirmErr ? ' showError' : ''} />    \r\n                            {confirmErr &&    \r\n                                <div style={{ color: \"red\", paddingBottom: 10 }}>{confirmErr}</div>    \r\n                            }    \r\n                        </div> \r\n    \r\n                       \r\n                           \r\n                        <div  className=\"form-group\">\r\n                        <input type=\"submit\"  class=\"btn\" value=\"Submit\" />   \r\n                        </div> \r\n                       <Link to=\"/Login\"><span  style={{marginLeft:\"70px\"}}>Already registered? to Login click here</span></Link>\r\n                    </form>    \r\n                </div>  \r\n                </div>  \r\n         \r\n            \r\n        )    \r\n    }    \r\n}    \r\n    \r\nexport default Register;","F:\\ReactJS\\case-study\\src\\reportWebVitals.js",[],["82","83"],"F:\\ReactJS\\case-study\\src\\Booking.js",[],"F:\\ReactJS\\case-study\\src\\Info.js",["84","85"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './Info.css'\r\n\r\nclass  Info extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      title:'',\r\n      fname:'',\r\n      lname:'',\r\n      age:'',\r\n      gender:'',\r\n      email:'',\r\n      phone:'',\r\n      address:'',\r\n      formErrors: {}  \r\n\r\n    };\r\n    this.initialState = this.state;  \r\n  }\r\n  handleFormValidation() {    \r\n    const {title,fname,lname,age,gender,email,phone,address} = this.state;    \r\n    let formErrors = {};    \r\n    let formIsValid = true;    \r\n\r\n     \r\n     \r\n\r\n      if (title === '' || title === \"select\") {    \r\n        formIsValid = false;    \r\n        formErrors[\"titleErr\"] = \"*Select Title\";    \r\n    }  \r\n\r\n      if(!fname){\r\n        formIsValid = false;\r\n        formErrors[\"fnameErr\"]=\"*First Name required\";\r\n      }\r\n     \r\n      if(!lname){\r\n        formIsValid = false;\r\n        formErrors[\"lnameErr\"]=\"*Last Name required\";\r\n      }\r\n     \r\n\r\n    //Age  \r\n    if (!age) {    \r\n        formIsValid = false;    \r\n        formErrors[\"ageErr\"] = \"*Age required\";    \r\n    }  \r\n    else{\r\n      var apattern =/^[0-9]{1,2}$/;\r\n      if(!apattern.test(age)){\r\n        formIsValid = false;\r\n        formErrors[\"ageErr\"]=\"* Invalid Age\";\r\n       }\r\n\r\n    }  \r\n   \r\n\r\n    if (gender === '' || gender === \"select\") {    \r\n      formIsValid = false;    \r\n      formErrors[\"genderErr\"] = \"*Select Gender\";    \r\n  }  \r\n  if (!email) {    \r\n    formIsValid = false;    \r\n    formErrors[\"emailErr\"] = \"*Email ID required\";    \r\n}    \r\nelse if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email))) {    \r\n\r\n    formIsValid = false;    \r\n    formErrors[\"emailErr\"] = \"*Invalid Email ID\";    \r\n}   \r\n\r\nif (!phone) {    \r\n  formIsValid = false;    \r\n  formErrors[\"phoneErr\"] = \"*Phone Number required\";    \r\n}    \r\nelse {    \r\n  var mobPattern = /^(?:(?:\\\\+|0{0,2})91(\\s*[\\\\-]\\s*)?|[0]?)?[789]\\d{9}$/;    \r\n  if (!mobPattern.test(phone)) {    \r\n      formIsValid = false;    \r\n      formErrors[\"phoneErr\"] = \"*Invalid Phone Number\";    \r\n  }    \r\n}  \r\n//Address\r\nif (!address) {    \r\nformIsValid = false;    \r\nformErrors[\"addressErr\"] = \"*Address required\";    \r\n}   \r\n   \r\n     \r\n    \r\n    this.setState({ formErrors: formErrors });    \r\n    return formIsValid;    \r\n}    \r\n\r\nhandleChange = (e) => {    \r\n    const { name, value } = e.target;    \r\n    this.setState({ [name]: value });    \r\n}    \r\n\r\nhandleSubmit = (e) => {    \r\n    e.preventDefault();    \r\n    \r\n        if (this.handleFormValidation()) {   \r\n      \r\n           alert('Are you sure?')    \r\n          window.location.href=\"/Payment\";\r\n        //this.setState(this.initialState)    \r\n         }    \r\n  \r\n}    \r\n   \r\n  render ()\r\n  {\r\n    const {titleErr, fnameErr, lnameErr, ageErr, genderErr, emailErr, phoneErr, addressErr } = this.state.formErrors; \r\n    return (\r\n        <div>\r\n                <nav class=\"navbar navbar-expand-lg navbar-light \">\r\n            <Link className=\"navbar-brand\" to=\"/\">\r\n         <img className=\"logo1\"src=\"logo1.png\" alt=\"logo\" />\r\n      </Link>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n    <ul class=\"navbar-nav\">\r\n      <li class=\"nav-item active\">\r\n        <Link className=\"ppl\"  to=\"/Flight\">Flight Schedule <span class=\"sr-only\">(current)</span></Link>\r\n      </li>\r\n      <li class=\"nav-item active\">\r\n        <Link className=\"ppl\"  to=\"/Booking\">Ticket Booking</Link>\r\n      </li>\r\n      <li class=\"nav-item active\">\r\n        <Link className=\"ppl\"  to=\"/Cancel\">Ticket Cancellation</Link>\r\n      </li>\r\n      <li class=\"nav-item active\">\r\n        <Link className=\"ppl\"  to=\"/Contact\">Contact Us</Link>\r\n      </li>\r\n      </ul>\r\n      </div>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav\">\r\n      <li class=\"nav-item7 active\">\r\n        <Link className=\"ppl\" to=\"/\">Logout</Link>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n<Link to=\"/Table\"><button className=\"perv\"> Pervious Page</button></Link>\r\n<div  className=\"qut\">\r\n \r\n<h4 className=\"were\" >Passenger Information</h4>\r\n<hr/>\r\n<div>\r\n<form onSubmit={this.handleSubmit} id=\"infobox\">\r\n<label className=\"fl\" ><h5>Personal Details :</h5></label><br/>\r\n<div className=\"form-group\">\r\n<label id=\"bld\"  >Title</label> <span></span>\r\n        \r\n        <select name=\"title\" onChange={this.handleChange} className={titleErr ? ' showError' : ''}  value={this.state.title} >\r\n        <option value=\"select\">--Select--</option>       \r\n <option value=\"mr\">Mr.</option>\r\n   <option value=\"ms\">Ms.</option>\r\n   <option value=\"mrs\">Mrs.</option>\r\n\r\n</select>\r\n{titleErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{titleErr}</div>}\r\n                            \r\n</div>\r\n<div className=\"form-group\" >\r\n<label  id=\"bld\">First Name:</label>\r\n        <input type=\"text\" placeholder=\"First Name\" name=\"fname\" onChange={this.handleChange}  className={fnameErr ? ' showError' : ''}  value={this.state.fname}  />\r\n        {fnameErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{fnameErr}</div>}\r\n <span></span> <span></span> <span></span> <span></span> <span></span> <span></span> <span></span>\r\n<div id=\"right\">\r\n        <label  id=\"bld\">Last Name:</label>\r\n        <input type=\"text\" placeholder=\"Last Name\" name=\"lname\" onChange={this.handleChange}  className={lnameErr ? ' showError' : ''}  value={this.state.lname}  />\r\n        {lnameErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{lnameErr}</div>}\r\n        </div>\r\n        </div>\r\n        <div className=\"form-group\" >  \r\n        <label  id=\"bld\">Age:</label>\r\n        <input type=\"text\" placeholder=\"Age\" id=\"ageside\"  name=\"age\" onChange={this.handleChange}  className={ageErr ? ' showError' : ''}  value={this.state.age}  /> \r\n        {ageErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{ageErr}</div>}\r\n        <div id=\"jj\">\r\n        <label className=\"gen\" id=\"bld\">Gender:</label>\r\n        <select  name=\"gender\" onChange={this.handleChange}  className={genderErr ? ' showError' : ''}  value={this.state.gender}  >\r\n        {genderErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{genderErr}</div>}\r\n        <option value=\"select\" >--Select--</option>    \r\n <option value=\"from\">Male</option>\r\n   <option value=\"mumbai\">Female</option>\r\n   <option value=\"delhi\">Others</option>\r\n   </select>\r\n{genderErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{genderErr}</div>}\r\n</div>\r\n</div>\r\n<br/>\r\n<label className=\"fl\"><h5 >Contact Details :</h5></label><br/>\r\n<div className=\"form-group\" >\r\n<label  id=\"bld\">Email ID:</label> \r\n<input type=\"text\"  name=\"email\" onChange={this.handleChange}  className={emailErr ? ' showError' : ''}  value={this.state.email}  ></input>\r\n{emailErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{emailErr}</div>}\r\n<div id=\"right\">\r\n<label  id=\"bld\" >Phone Number:</label> \r\n<input type=\"text\" name=\"phone\" onChange={this.handleChange}  className={phoneErr ? ' showError' : ''}  value={this.state.phone}   ></input>\r\n{lnameErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{phoneErr}</div>}\r\n</div>\r\n</div>\r\n<div className=\"form-group\">\r\n<label  id=\"bld\">Address:</label><br/>\r\n\r\n<textarea type=\"text\" cols=\"30\" rows=\"4\" name=\"address\" onChange={this.handleChange}  className={addressErr ? ' showError' : ''}  value={this.state.address}  ></textarea>\r\n{addressErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{addressErr}</div>}\r\n</div>\r\n\r\n\r\n<input type=\"submit\"  class=\"btni\" value=\"Submit\" />  \r\n\r\n</form>\r\n</div>\r\n\r\n</div>\r\n\r\n           \r\n            \r\n        </div>\r\n    )\r\n }\r\n \r\n\r\n}\r\nexport default Info\r\n","F:\\ReactJS\\case-study\\src\\Succ.js",[],"F:\\ReactJS\\case-study\\src\\Table1.js",[],"F:\\ReactJS\\case-study\\src\\Cancel.js",[],"F:\\ReactJS\\case-study\\src\\Login.js",["86"],"import React from 'react'\r\nimport './Login.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {    \r\n    super(props);    \r\n    this.state = {    \r\n          Email: '',    \r\n        Password: '',\r\n        formErrors: {}    \r\n    }    \r\n    this.Email = this.Email.bind(this);\r\n    this.Password = this.Password.bind(this);\r\n    this.login = this.login.bind(this);\r\n\r\n    //this.initialState = this.state;    \r\n}  \r\nEmail(event){\r\n  this.setState({Email: event.target.value})\r\n}\r\nPassword(event){\r\n  this.setState({Password: event.target.value})\r\n}\r\nhandleFormValidation() {    \r\n  const {  Email, Password } = this.state;    \r\n  let formErrors = {};    \r\n  let formIsValid = true;  \r\n\r\n   //Email    \r\n   if (!Email) {    \r\n    formIsValid = false;    \r\n    formErrors[\"emailIdErr\"] = \"*Email ID required\";    \r\n}    \r\n \r\n\r\n //Password\r\n if (!Password) {\r\n  formIsValid = false;  \r\n  formErrors[\"passwordErr\"]= '*Password required';\r\n} \r\n\r\nthis.setState({ formErrors: formErrors });    \r\nreturn formIsValid;    \r\n}  \r\nhandleChange = (e) => {    \r\n  const { name, value } = e.target;    \r\n  this.setState({ [name]: value });    \r\n}    \r\n\r\n// handleSubmit = (e) => {    \r\n//   e.preventDefault();    \r\n\r\n//   if (this.handleFormValidation()) { \r\n    \r\n//     alert('Login Successful')    \r\n//     window.location.href=\"/Flight\";\r\n//    // this.setState(this.initialState)    \r\n// } \r\n  \r\n// } \r\nlogin(event) {\r\n  event.preventDefault()\r\n  \r\n  fetch('https://localhost:44340/api/login/Login', {\r\n      method: 'post',\r\n      headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n          Email: this.state.Email,\r\n          Password: this.state.Password,\r\n         \r\n      })\r\n  }).then((Response) => Response.json())\r\n      .then((result) => {\r\n          console.log(result);\r\n          localStorage.setItem('user', this.state.Email)\r\n          if (result.Status == 'Invalid')\r\n          {\r\n              alert('Invalid User');\r\n          }\r\n          else{\r\n              this.props.history.push(\"/Flight\");\r\n             console.log(\"Success\");\r\n           //  window.location.href=\"/Flight\";\r\n          }\r\n      })\r\n}\r\n\r\n  render(){\r\n    const {  emailIdErr, passwordErr } = this.state.formErrors;  \r\n    return (\r\n        <div>\r\n          <nav class=\"navbar navbar-expand-lg navbar-light \">\r\n            <Link className=\"navbar-brand\" to=\"/\">\r\n         <img className=\"logo1\"src=\"logo1.png\" alt=\"logo\" />\r\n      </Link>\r\n\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav\" id=\"qqt1\">\r\n     \r\n      <li className=\"nav-item\">\r\n        <Link className=\"ppl1\" style={{float:\"right\"}} to=\"/Register\">Register</Link>\r\n      </li>\r\n    </ul>\r\n \r\n  </div>\r\n</nav>\r\n              \r\n            \r\n            <h1>Login Form</h1> \r\n            <p>If you don't have any account then register first and login again</p>\r\n\r\n            <div>    \r\n                    <form onSubmit={this.login} >    \r\n                          \r\n                        <div  className=\"form-group\">    \r\n                            <label htmlFor=\"emailId\">Email ID</label>    \r\n                            <input type=\"text\" name=\"Email\"    \r\n                                value={this.state.Email} id=\"form-control\"  \r\n                                onChange={this.handleChange}    \r\n                                placeholder=\"Email\"    \r\n                                className={emailIdErr ? ' showError' : ''} />    \r\n                            {emailIdErr &&    \r\n                                <div style={{ color: \"red\", paddingBottom: 10 }}>{emailIdErr}</div>    \r\n                            }    \r\n    \r\n                        </div>    \r\n                     \r\n                        \r\n                               <div  className=\"form-group\">    \r\n                            <label htmlFor=\"password\">Password</label>    \r\n                            <input type=\"password\" name=\"Password\"    \r\n                                onChange={this.handleChange}    id=\"form-control\"  \r\n                                value={this.state.Password}    \r\n                                placeholder=\"Password\"    \r\n                                className={passwordErr ? ' showError' : ''} />    \r\n                            {passwordErr &&    \r\n                                <div style={{ color: \"red\", paddingBottom: 10 }}>{passwordErr}</div>    \r\n                            }    \r\n                        </div>  \r\n                      \r\n    \r\n                        \r\n                        <div  className=\"form-group\">\r\n                        <input type=\"submit\"  class=\"btn\" value=\"Login\" />  \r\n                        </div> \r\n                       <Link to=\"/Register\"><span  style={{marginLeft:\"100px\"}}>Not Registered? Click Here</span></Link>\r\n                    </form>    \r\n                </div>    \r\n            </div >  \r\n\r\n\r\n\r\n\r\n\r\n         \r\n    )\r\n}\r\n}\r\nexport default Login\r\n",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"87","replacedBy":"91"},{"ruleId":"89","replacedBy":"92"},{"ruleId":"87","replacedBy":"93"},{"ruleId":"89","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":37,"column":23,"nodeType":"97","messageId":"98","endLine":37,"endColumn":24,"suggestions":"99"},{"ruleId":"95","severity":1,"message":"96","line":37,"column":39,"nodeType":"97","messageId":"98","endLine":37,"endColumn":40,"suggestions":"100"},{"ruleId":"87","replacedBy":"101"},{"ruleId":"89","replacedBy":"102"},{"ruleId":"95","severity":1,"message":"96","line":40,"column":27,"nodeType":"97","messageId":"98","endLine":40,"endColumn":28,"suggestions":"103"},{"ruleId":"95","severity":1,"message":"96","line":40,"column":43,"nodeType":"97","messageId":"98","endLine":40,"endColumn":44,"suggestions":"104"},{"ruleId":"87","replacedBy":"105"},{"ruleId":"89","replacedBy":"106"},{"ruleId":"95","severity":1,"message":"96","line":69,"column":19,"nodeType":"97","messageId":"98","endLine":69,"endColumn":20,"suggestions":"107"},{"ruleId":"95","severity":1,"message":"96","line":69,"column":35,"nodeType":"97","messageId":"98","endLine":69,"endColumn":36,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":82,"column":29,"nodeType":"111","messageId":"112","endLine":82,"endColumn":31},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],["113"],["114"],["113"],["114"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["115","116"],["117","118"],["113"],["114"],["119","120"],["121","122"],["113"],["114"],["123","124"],["125","126"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"messageId":"127","fix":"128","desc":"129"},{"messageId":"130","fix":"131","desc":"132"},{"messageId":"127","fix":"133","desc":"129"},{"messageId":"130","fix":"134","desc":"132"},{"messageId":"127","fix":"135","desc":"129"},{"messageId":"130","fix":"136","desc":"132"},{"messageId":"127","fix":"137","desc":"129"},{"messageId":"130","fix":"138","desc":"132"},{"messageId":"127","fix":"139","desc":"129"},{"messageId":"130","fix":"140","desc":"132"},{"messageId":"127","fix":"141","desc":"129"},{"messageId":"130","fix":"142","desc":"132"},"removeEscape",{"range":"143","text":"144"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"145","text":"146"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"147","text":"144"},{"range":"148","text":"146"},{"range":"149","text":"144"},{"range":"150","text":"146"},{"range":"151","text":"144"},{"range":"152","text":"146"},{"range":"153","text":"144"},{"range":"154","text":"146"},{"range":"155","text":"144"},{"range":"156","text":"146"},[909,910],"",[909,909],"\\",[925,926],[925,925],[1182,1183],[1182,1182],[1198,1199],[1198,1198],[1587,1588],[1587,1587],[1603,1604],[1603,1603]]